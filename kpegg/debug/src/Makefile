# Makefile.in generated by automake 1.6.3 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 1.5.4.1 $ 
# src/Makefile.  Generated from Makefile.in by config.pl.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = /home/daniel/Projekte/kpegg/src
top_srcdir = /home/daniel/Projekte/kpegg
VPATH = /home/daniel/Projekte/kpegg/src
prefix = /usr/kde/3.2
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/kpegg
pkglibdir = $(libdir)/kpegg
pkgincludedir = $(includedir)/kpegg
top_builddir = ..

ACLOCAL = ${SHELL} /home/daniel/Projekte/kpegg/admin/missing --run aclocal-1.6
AUTOCONF = $(SHELL) $(top_srcdir)/admin/cvs.sh configure || touch configure
AUTOMAKE = ${SHELL} /home/daniel/Projekte/kpegg/admin/missing --run automake-1.6
AUTOHEADER = ${SHELL} /home/daniel/Projekte/kpegg/admin/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /bin/install -c -p
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = 
build_triplet = i686-pc-linux-gnu
host_alias = 
host_triplet = i686-pc-linux-gnu
target_alias = 
target_triplet = i686-pc-linux-gnu

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = ${SHELL} /home/daniel/Projekte/kpegg/admin/missing --run tar
AR = ar
ARTSCCONFIG = /usr/kde/3.2/bin/artsc-config
AS = @AS@
AUTODIRS = 
AWK = gawk
CC = gcc
CONF_FILES =  $(top_srcdir)/./admin/configure.in.min $(top_srcdir)/configure.in.in
CPP = gcc -E
CXX = g++
CXXCPP = g++ -E
DCOPIDL = /usr/kde/3.2/bin/dcopidl
DCOPIDL2CPP = /usr/kde/3.2/bin/dcopidl2cpp
DCOPIDLNG = 
DCOP_DEPENDENCIES = $(DCOPIDL)
DEPDIR = .deps
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
ECHO = echo
EGREP = grep -E
F77 = 
FRAMEWORK_COREAUDIO = 
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = /usr/bin/msgfmt
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
JAR = @JAR@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JVMLIBS = @JVMLIBS@
KCFG_DEPENDENCIES = 
KCONFIG_COMPILER = 
KDECONFIG = /usr/kde/3.2/bin/kde-config
KDE_EXTRA_RPATH = 
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = -I/usr/kde/3.2/include
KDE_LDFLAGS = -L/usr/kde/3.2/lib
KDE_MT_LDFLAGS = 
KDE_MT_LIBS = -lpthread
KDE_NO_UNDEFINED = -Wl,--no-undefined -Wl,--allow-shlib-undefined
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_NO_UNDEFINED) $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = -R $(kde_libraries) -R $(qt_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = 
KDE_USE_CLOSURE_TRUE = #
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDE_USE_NMCHECK_FALSE = 
KDE_USE_NMCHECK_TRUE = #
KDE_XSL_STYLESHEET = /usr/kde/3.2/share/apps/ksgmltools2/customization/kde-chunk.xsl
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBBZ2 = @LIBBZ2@
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBGEN = @LIBGEN@
LIBJPEG = -ljpeg
LIBOBJS = 
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBRESOLV = -lresolv
LIBSHADOW = @LIBSHADOW@
LIBSM = -lSM -lICE
LIBSOCKET = 
LIBSSL = @LIBSSL@
LIBTIFF = @LIBTIFF@
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBUCB = 
LIBUTIL = -lutil
LIBZ = -lz
LIB_JASPER = @LIB_JASPER@
LIB_KAB = -lkab
LIB_KABC = -lkabc
LIB_KDECORE = -lkdecore
LIB_KDEPIM = -lkdepim
LIB_KDEPRINT = -lkdeprint
LIB_KDEUI = -lkdeui
LIB_KFILE = -lkio
LIB_KFM = 
LIB_KHTML = -lkhtml
LIB_KIO = -lkio
LIB_KPARTS = -lkparts
LIB_KSPELL = -lkspell
LIB_KSYCOCA = -lkio
LIB_KUTILS = -lkutils
LIB_POLL = 
LIB_QPE = 
LIB_QT = -lqt-mt  $(LIBZ) $(LIBPNG) -lXext $(LIB_X11) $(LIBSM) -lpthread
LIB_QTOPIA = @LIB_QTOPIA@
LIB_SMB = -lsmb
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LIB_XRENDER = 
LN_S = ln -s
MCOPIDL = /usr/kde/3.2/bin/mcopidl
MEINPROC = /usr/kde/3.2/bin/meinproc
MOC = /usr/qt/3/bin/moc
MSGFMT = /usr/bin/msgfmt
NOOPT_CFLAGS = -O0
NOOPT_CXXFLAGS = -O0
OBJC = @OBJC@
OBJCFLAGS = @OBJCFLAGS@
OBJDUMP = @OBJDUMP@
PACKAGE = kpegg
PAMLIBS = @PAMLIBS@
PASSWDLIBS = @PASSWDLIBS@
PERL = /usr/bin/perl
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = 
QTOPIA_INCLUDES = @QTOPIA_INCLUDES@
QT_INCLUDES = -I/usr/qt/3/include
QT_LDFLAGS = -L/usr/qt/3/lib
RANLIB = ranlib
RC = @RC@
SETUIDFLAGS = @SETUIDFLAGS@
SSL_INCLUDES = @SSL_INCLUDES@
SSL_LDFLAGS = @SSL_LDFLAGS@
STRIP = strip
TOPSUBDIRS =  doc po src
UIC = /usr/qt/3/bin/uic -L $(kde_widgetdir) -nounload
UIC_TR = tr2i18n
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = 
VERSION = 0.2
WOVERLOADED_VIRTUAL = -Woverloaded-virtual
XGETTEXT = /usr/bin/xgettext
XMLLINT = /usr/bin/xmllint
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = 
X_INCLUDES = -I/usr/X11R6/include
X_LDFLAGS = -L/usr/X11R6/lib
X_PRE_LIBS = 
X_RPATH = -R $(x_libraries)
all_includes = -I/usr/kde/3.2/include -I/usr/qt/3/include -I/usr/X11R6/include 
all_libraries = -L/usr/X11R6/lib -L/usr/qt/3/lib -L/usr/kde/3.2/lib 
am__include = include
am__quote = 
install_sh = /home/daniel/Projekte/kpegg/admin/install-sh
jni_includes = @jni_includes@
kde_appsdir = ${datadir}/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${datadir}/config
kde_datadir = ${datadir}/apps
kde_htmldir = ${datadir}/doc/HTML
kde_icondir = ${datadir}/icons
kde_includes = /usr/kde/3.2/include
kde_kcfgdir = ${datadir}/config.kcfg
kde_libraries = /usr/kde/3.2/lib
kde_libs_htmldir = /usr/kde/3.2/share/doc/HTML
kde_libs_prefix = /usr/kde/3.2
kde_locale = ${datadir}/locale
kde_mimedir = ${datadir}/mimelnk
kde_moduledir = ${libdir}/kde3
kde_qtver = 3
kde_servicesdir = ${datadir}/services
kde_servicetypesdir = ${datadir}/servicetypes
kde_sounddir = ${datadir}/sounds
kde_styledir = ${libdir}/kde3/plugins/styles
kde_templatesdir = ${datadir}/templates
kde_wallpaperdir = ${datadir}/wallpapers
kde_widgetdir = /usr/kde/3.2/lib/kde3/plugins/designer
kdeinitdir = $(kde_moduledir)
qt_includes = /usr/qt/3/include
qt_libraries = /usr/qt/3/lib
x_includes = /usr/X11R6/include
x_libraries = /usr/X11R6/lib
xdg_appsdir = ${datadir}/applications/kde
xdg_directorydir = ${datadir}/desktop-directories
xdg_menudir = ${sysconfdir}/xdg/menus

# this is the program that gets installed.  it's name is used for all
# of the other Makefile.am variables
bin_PROGRAMS = kpegg kpegg_client

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)

# the library search path. 
kpegg_LDFLAGS = $(KDE_RPATH) $(all_libraries)

# the libraries to link against.
kpegg_LDADD = $(LIB_KFILE) $(LIB_KDEPRINT)

# which sources should be compiled for kpegg
#>- kpegg_SOURCES = main.cpp kpegg.cpp kpeggview.cpp \
#>- 		      pref.cpp kpeggiface.skel
#>+ 2
kpegg_SOURCES=main.cpp kpegg.cpp kpeggview.cpp \
		      pref.cpp  kpeggiface_skel.cpp


# these are the headers for your project
noinst_HEADERS = kpegg.h kpeggview.h pref.h

# client stuff
kpegg_client_LDFLAGS = $(KDE_RPATH) $(all_libraries)
kpegg_client_LDADD = $(LIB_KDECORE)
kpegg_client_SOURCES = kpegg_client.cpp

# let automoc handle all of the meta source files (moc)
#>- METASOURCES = AUTO

KDE_ICON = kpegg

# this is where the kdelnk file will go 
kdelnkdir = $(kde_appsdir)/Utilities
kdelnk_DATA = kpegg.desktop

# this is where the XML-GUI resource file goes
rcdir = $(kde_datadir)/kpegg
rc_DATA = kpeggui.rc
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = kpegg$(EXEEXT) kpegg_client$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_kpegg_OBJECTS = main.$(OBJEXT) kpegg.$(OBJEXT) kpeggview.$(OBJEXT) \
	pref.$(OBJEXT)
#>- kpegg_OBJECTS = $(am_kpegg_OBJECTS)
#>+ 5
kpegg_final_OBJECTS = kpegg.all_cpp.o 
kpegg_nofinal_OBJECTS = main.$(OBJEXT) kpegg.$(OBJEXT) kpeggview.$(OBJEXT) \
	pref.$(OBJEXT) kpeggiface_skel.$(OBJEXT)
kpegg_OBJECTS = $(kpegg_nofinal_OBJECTS)
#kpegg_OBJECTS = $(kpegg_final_OBJECTS)
kpegg_DEPENDENCIES =
am_kpegg_client_OBJECTS = kpegg_client.$(OBJEXT)
#>- kpegg_client_OBJECTS = $(am_kpegg_client_OBJECTS)
#>+ 1
kpegg_client_OBJECTS = kpegg_client.$(OBJEXT)
kpegg_client_DEPENDENCIES =

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS =  -DQT_THREAD_SUPPORT  -D_REENTRANT
LDFLAGS = 
LIBS = 
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- DEP_FILES = ./$(DEPDIR)/kpegg.Po ./$(DEPDIR)/kpegg_client.Po \
#>- 	./$(DEPDIR)/kpeggview.Po ./$(DEPDIR)/main.Po \
#>- 	./$(DEPDIR)/pref.Po
#>+ 6
#DEP_FILES =  $(DEPDIR)/kpeggiface_skel.P  $(DEPDIR)/kpegg.all_cpp.P ./$(DEPDIR)/kpegg.Po ./$(DEPDIR)/kpegg_client.Po \
#		./$(DEPDIR)/kpeggview.Po ./$(DEPDIR)/main.Po \
#		./$(DEPDIR)/pref.Po
DEP_FILES =  $(DEPDIR)/kpeggiface_skel.P ./$(DEPDIR)/kpegg.Po ./$(DEPDIR)/kpegg_client.Po \
		./$(DEPDIR)/kpeggview.Po ./$(DEPDIR)/main.Po \
		./$(DEPDIR)/pref.Po
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = -Wnon-virtual-dtor -Wno-long-long -Wundef -Wall -W -Wpointer-arith -Wwrite-strings -ansi -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -Wcast-align -Wconversion -Wchar-subscripts -g3 -fno-inline -O0 -g3 -Wformat-security -Wmissing-format-attribute -fno-exceptions -fno-check-new -fno-common
DIST_SOURCES = $(kpegg_SOURCES) $(kpegg_client_SOURCES)
DATA = $(kdelnk_DATA) $(rc_DATA)

HEADERS = $(noinst_HEADERS)

DIST_COMMON = README $(noinst_HEADERS) Makefile.am Makefile.in
SOURCES = $(kpegg_SOURCES) $(kpegg_client_SOURCES)

#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/Makefile
#>+ 3
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
kpegg$(EXEEXT): $(kpegg_OBJECTS) $(kpegg_DEPENDENCIES) 
	@rm -f kpegg$(EXEEXT)
	$(CXXLINK) $(kpegg_LDFLAGS) $(kpegg_OBJECTS) $(kpegg_LDADD) $(LIBS)
kpegg_client$(EXEEXT): $(kpegg_client_OBJECTS) $(kpegg_client_DEPENDENCIES) 
	@rm -f kpegg_client$(EXEEXT)
	$(CXXLINK) $(kpegg_client_LDFLAGS) $(kpegg_client_OBJECTS) $(kpegg_client_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/kpegg.Po
include ./$(DEPDIR)/kpegg_client.Po
include ./$(DEPDIR)/kpeggview.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/pref.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CXXDEPMODE) $(depcomp) \
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CXXDEPMODE = depmode=gcc3

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
kdelnkDATA_INSTALL = $(INSTALL_DATA)
install-kdelnkDATA: $(kdelnk_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(kdelnkdir)
	@list='$(kdelnk_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(kdelnkDATA_INSTALL) $$d$$p $(DESTDIR)$(kdelnkdir)/$$f"; \
	  $(kdelnkDATA_INSTALL) $$d$$p $(DESTDIR)$(kdelnkdir)/$$f; \
	done

uninstall-kdelnkDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kdelnk_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(kdelnkdir)/$$f"; \
	  rm -f $(DESTDIR)$(kdelnkdir)/$$f; \
	done
rcDATA_INSTALL = $(INSTALL_DATA)
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(rcdir)
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(rcDATA_INSTALL) $$d$$p $(DESTDIR)$(rcdir)/$$f"; \
	  $(rcDATA_INSTALL) $$d$$p $(DESTDIR)$(rcdir)/$$f; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(rcdir)/$$f"; \
	  rm -f $(DESTDIR)$(rcdir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(kdelnkdir) $(DESTDIR)$(rcdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-idl clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

#>- install-data-am: install-kdelnkDATA install-rcDATA
#>+ 1
install-data-am: install-kde-icons  install-kdelnkDATA install-rcDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

#>- uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
#>- 	uninstall-kdelnkDATA uninstall-rcDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-info-am \
	uninstall-kdelnkDATA uninstall-rcDATA

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-kdelnkDATA install-man install-rcDATA install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am \
	uninstall-kdelnkDATA uninstall-rcDATA


messages: rc.cpp
	$(XGETTEXT) *.cpp -o $(podir)/kpegg.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 5
kpeggiface.kidl: $(srcdir)/kpeggiface.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/kpeggiface.h > kpeggiface.kidl || ( rm -f kpeggiface.kidl ; false )
kpeggiface_skel.cpp: kpeggiface.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub kpeggiface.kidl

#>+ 3
kpegg.moc: $(srcdir)/kpegg.h
	$(MOC) $(srcdir)/kpegg.h -o kpegg.moc

#>+ 2
mocs: kpegg.moc

#>+ 3
kpeggview.moc: $(srcdir)/kpeggview.h
	$(MOC) $(srcdir)/kpeggview.h -o kpeggview.moc

#>+ 2
mocs: kpeggview.moc

#>+ 3
pref.moc: $(srcdir)/pref.h
	$(MOC) $(srcdir)/pref.h -o pref.moc

#>+ 2
mocs: pref.moc

#>+ 3
clean-metasources:
	-rm -f  kpegg.moc kpeggview.moc pref.moc

#>+ 2
KDE_DIST=kpegg.desktop kpeggiface.h kpegg.lsm hi32-app-kpegg.png kpeggui.rc hi16-app-kpegg.png 

#>+ 4
clean-idl:
	-rm -f \
	kpeggiface_skel.cpp kpeggiface_skel.h kpeggiface.kidl 

#>+ 2
docs-am:

#>+ 10
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-kpegg.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/kpegg.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-kpegg.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/kpegg.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/kpegg.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/kpegg.png

#>+ 6
force-reedit:
		cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
kpegg.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/main.cpp $(srcdir)/kpegg.cpp $(srcdir)/kpeggview.cpp $(srcdir)/pref.cpp kpeggiface_skel.cpp  kpegg.moc kpeggview.moc pref.moc
	@echo 'creating kpegg.all_cpp.cpp ...'; \
	rm -f kpegg.all_cpp.files kpegg.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kpegg.all_cpp.final; \
	for file in main.cpp kpegg.cpp kpeggview.cpp pref.cpp kpeggiface_skel.cpp ; do \
	  echo "#include \"$$file\"" >> kpegg.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kpegg.all_cpp.final; \
	done; \
	cat kpegg.all_cpp.final kpegg.all_cpp.files > kpegg.all_cpp.cpp; \
	rm -f kpegg.all_cpp.final kpegg.all_cpp.files

#>+ 3
clean-final:
	-rm -f kpegg.all_cpp.cpp

#>+ 3
final:
	$(MAKE) kpegg_OBJECTS="$(kpegg_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) kpegg_OBJECTS="$(kpegg_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) kpegg_OBJECTS="$(kpegg_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) kpegg_OBJECTS="$(kpegg_nofinal_OBJECTS)" install-am

#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 9
nmcheck: 
kpeggview.o: kpeggview.moc 
kpegg.o: kpegg.moc 
nmcheck-am: nmcheck
pref.lo: pref.moc 
kpeggview.lo: kpeggview.moc 
pref.o: pref.moc 
kpegg.lo: kpegg.moc 
